#
# clue.yml: workflow of "clue" job
#

name: clue
env:
  ARTIFACT_01: clue.R.tgz
  ARTIFACT_02: dataPatch.R.tgz
  ARTIFACT_03: renderWebPage.R.tgz
  UNIPROT_CACHE_DIR: G.D.CACHE

# Controls when the action will run. 
on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # JOB: CLUE
  clue:
    name: "Download perturbagens from clue.io (R/clue.R)"
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - name: Download recent "${{ env.ARTIFACT_01 }}"
        run: |
          bash -x src/get_artifact.bash "${{ secrets.GITHUB_TOKEN }}" "${{ env.ARTIFACT_01 }}"
          rm "${{ env.ARTIFACT_01 }}" # TODO: should be controlled by workflow parameter
        continue-on-error: true

      #
      # This step is inspired by a comment: https://github.com/actions/toolkit/issues/299#issuecomment-574918750
      #
      # Is there a cached content?
      # If yes, then clue.io is not needed.
      - name: Previous result exists
        id: cache_exists
        run: |
          if [ -f "${{ env.ARTIFACT_01 }}" ]; then
            echo ::set-output name=cache_check::yes
          fi

      #
      # Dependencies
      #
      - name: "Dependencies: R pkgs from added PPA and CRAN"
        if: steps.cache_exists.outputs.cache_check != 'yes'
        run: sudo bash src/gh_action__setup_and_install.bash

      # Exec clue.R
      - name: R/clue.R
        if: steps.cache_exists.outputs.cache_check != 'yes'
        run: Rscript R/clue.R
        env:
          CLUE_USER_KEY: ${{ secrets.CLUE_USER_KEY }}
          SERVICE_TOKEN_JSON: ${{ secrets.CLUE_GS4_SERVICE_TOKEN_JSON }}
          TARGET_LIST_ID: ${{ secrets.TARGET_LIST_ID }}
      
      # Wrap OUTPUT directory
      - name: Create archive file for "caching"
        if: steps.cache_exists.outputs.cache_check != 'yes'
        run: bash src/wrap_directory.bash "${{ env.ARTIFACT_01 }}" OUTPUT

      # Caching
      - name: Upload result artifact as a cache custom cache solution
        if: steps.cache_exists.outputs.cache_check != 'yes'
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "${{ env.ARTIFACT_01 }}"
          path: "${{ env.ARTIFACT_01 }}"
          retention-days: 1

      - name: Checksum of artifact
        if: steps.cache_exists.outputs.cache_check != 'yes'
        run: md5sum "${{ env.ARTIFACT_01 }}"

      - name: Trigger "dataPatch"
        if: steps.cache_exists.outputs.cache_check != 'yes'
        run: bash -x src/trigger_workflow.bash \
          main dataPatch "${{ secrets.GH_PAGES_PAT }}"
