#
# clue.yml: simplified workflow
#

name: clue
env:
  ARTIFACT_01: clue.R.tgz
  ARTIFACT_02: dataPatch.R.tgz
  ARTIFACT_03: renderWebPage.R.tgz
  UNIPROT_CACHE_DIR: G.D.CACHE

# Controls when the action will run.
on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # JOB: CLUE
  clue:
    name: "Collect, transform, represent target dataset"
    runs-on: ubuntu-20.04

    steps:


      - uses: actions/checkout@v2

      #
      # Dependencies
      #
      # - name: "Dependencies: R pkgs from added PPA and CRAN"
      #  run: sudo bash src/gh_action__setup_and_install.bash
      - uses: r-lib/actions/setup-r@v2

      - name: setup renv dependencies
        run: sudo apt install libssl-dev libcurl4-openssl-dev libxml2-dev

      - uses: r-lib/actions/setup-renv@v2


# clue ########################################################


      # Get system/session information
      - name: Collect session and system information
        run: Rscript R/collectSessionInfo.R

      # Exec clue.R
      - name: R/clue.R
        run: R -e 'source("R/clue.R"); main()'
        env:
          CLUE_USER_KEY: ${{ secrets.CLUE_USER_KEY }}
          SERVICE_TOKEN_JSON: ${{ secrets.CLUE_GS4_SERVICE_TOKEN_JSON }}
          TARGET_LIST_ID: ${{ secrets.TARGET_LIST_ID }}

      # Wrap OUTPUT directory
      - name: Create archive file for "caching"
        run: bash src/wrap_directory.bash "${{ env.ARTIFACT_01 }}" OUTPUT

      # Caching
      - name: Upload result artifact as a cache custom cache solution
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "${{ env.ARTIFACT_01 }}"
          path: "${{ env.ARTIFACT_01 }}"
          retention-days: 1

      - name: Checksum of artifact
        run: md5sum "${{ env.ARTIFACT_01 }}"


# dataPatch ###################################################


      - name: "Drive task: download 'external' dataPatch cache stuff"
        continue-on-error: true
        run: |
          URL="https://www.googleapis.com/drive/v3/files/%s?key=%s&alt=media"
          URL="$(
            printf $URL ${{ secrets.DATAPATCH_DRIVE_ID }} \
              ${{ secrets.DATAPATCH_API_KEY }}
          )"
          curl -o "$ARTIFACT_02" "${URL}&alt=media" \
            && {
                echo "md5sum of cache file"
                md5sum "$ARTIFACT_02"
                tar --keep-newer-files -xzf "$ARTIFACT_02"
              } \
            || {
              echo "WARNING: external dataPatch not accessible"
              echo "WARNING: prepare for a long time running"
              echo "WARNING: job will be cancelled after 6 hours"
              exit 1
            } > /dev/stderr


      # Exec dataPatch.R
      # TODO: this can be a long process: downloads in parallel jobs is a potential improvement
      - name: R/dataPatch.R
        run: R -e 'source("R/dataPatch.R"); main()'

      # Wrap OUTPUT into tar package
      - name: Prepare archive file for upload
        run: |
          md5sum OUTPUT/clue_patched.rds
          bash src/wrap_directory.bash "${{ env.ARTIFACT_02 }}" OUTPUT
          md5sum "${{ env.ARTIFACT_02 }}"

      # Caching
      - name: Upload result
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "${{ env.ARTIFACT_02 }}"
          path: "${{ env.ARTIFACT_02 }}"
          retention-days: 10

      - name: Checksum of artifact
        run: md5sum "${{ env.ARTIFACT_02 }}"


# render  #####################################################


      - name: Exec page rendering (renderWebPage.R)
        run: |
          R -e 'source("R/renderWebPage.R"); main()'
          ls -lt OUTPUT/*.html
          tree -d ..


# deploy ######################################################


      - name: Save OUTPUT directory before clobbering checkout
        run: mv OUTPUT ..

      - uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Restore OUTPUT directory
        run: mv ../OUTPUT .

      - name: gh-pages "deploy"
        run: |
          git config  --local user.email "scancer@action.nowhere"
          git config  --local user.name "scancer github action"

          md5sum OUTPUT/clue_patched.rds

          mv OUTPUT/index.target.with.data.html . || {
            tree -d ..
            ls -lt
            exit 1
          }
          git add index.target.with.data.html
          RUN_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          git commit -F <(\
            printf "Pushed by workflow: %s, run number: %d\n\n$RUN_URL" \
              "$GITHUB_WORKFLOW" \
              "$GITHUB_RUN_NUMBER" \
          )

          git push "https://${{ secrets.GH_PAGES_PAT }}@github.com/cycle20/scancer.git" \
            gh-pages:gh-pages
          git log -1
          git status

      - name: "Wrap web artifacts into '${{ env.ARTIFACT_03 }}'"
        run: |
          tar -cvzf "${{ env.ARTIFACT_03 }}" \
            index.target.with.data.html js/*

      - name: "Upload artifact '${{ env.ARTIFACT_03 }}'"
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "${{ env.ARTIFACT_03 }}"
          path: "${{ env.ARTIFACT_03 }}"
          retention-days: 5

      - name: Checksum of artifact
        run: md5sum "${{ env.ARTIFACT_03 }}"
