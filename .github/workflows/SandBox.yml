name: SandBox
env:
  ARTIFACT_01: clue.R.tar
  ARTIFACT_02: dataPatch.R.tar
  ARTIFACT_03: renderWebPage.R.tar

on:
  # This is an experimental workflow that is manually triggered
  workflow_dispatch:

jobs:
  clue:
    name: Download perturbagens from clue.io
    runs-on: ubuntu-latest
    
    steps:
      - name: "env dump"
        run: env | sort
    

  # experimental job to practice GHA features
  dataPatch:
    name: Collect missing data
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # https://docs.github.com/en/actions/reference/environment-variables#default-environment-variables
    - name: "env dump"
      run: env | sort

    - uses: actions/checkout@v2

    - name: Get most recent "${{ env.ARTIFACT_01 }}" artifact
      run: bash -x src/get_artifact.bash "${{ env.ARTIFACT_01 }}"

    - name: "Drive task: download external UniProt cach stuff"
      run: |
        echo "Download cache stuff..."
        bash src/google_download.bash "${{ secrets.UNIPROT_PRE_CACHED }}" u.tgz
        echo "md5sum of cache file"
        md5sum u.tgz

    - name: tarball verbosed extraction of downloaded cache stuff
      run: |
        mkdir -p G.D.CACHE
        tar --directory=G.D.CACHE -xvzf u.tgz
        ls -lt G.D.CACHE
        function dump_unport_lines() { awk -F'\t' '/uniprot\/P/ { print $1, $2; }' $1 | sort; }
        dump_unport_lines G.D.CACHE/UniProt_CacheLines.tsv


    - name: Snoop
      run: |
        pwd
        ls -ldt *
        find ~ -maxdepth 2 -type d
      
    - run: echo hello > arti.txt
    
    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: arti.txt
        retention-days: 1

    - uses: actions/upload-artifact@v2
      with:
        name: up
        path: u.tgz
        retention-days: 1

    - run: rm arti.txt
    
    - run: ls -ldt *.txt
      continue-on-error: true
      
    - run: echo DONE
